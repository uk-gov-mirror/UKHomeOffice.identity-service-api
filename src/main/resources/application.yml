spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${auth.url}/auth/realms/${auth.realm}

server:
  forward-headers-strategy: native
  tomcat:
    remoteip:
      protocol-header: x-forwarded-proto
      remote-ip-header: x-forwarded-for
  ssl:
    enabled: ${ssl.enabled:false}
    key-alias: cert
    key-store: /etc/keystore/keystore.p12
    key-store-password: changeit
    key-password: changeit
    key-store-type: PKCS12
    trust-store: ${javax.net.ssl.trustStore:/etc/keystore/cacerts}
    trust-store-password: ${javax.net.ssl.trustStorePassword:changeit}
    trust-store-type: ${javax.net.ssl.trustStoreType:PKCS12}

aws:
  region: ${AWS_REGION:eu-west-2}
  bucket-name: ${aws.s3.identity.scanData:}
  csca-master-list-bucket-name: ${aws.s3.csca.masterList:}
  credentials:
    access-key: ${AWS_ACCESS_KEY:}
    secret-Key: ${AWS_SECRET_KEY:}


springdoc:
  api-docs:
    path: /docs
    enabled: ${openapi.docs.enabled:true}
  swagger-ui:
    path: /swagger/ui.html
    oauth:
      realm: ${swagger.auth.realm:elf}
      client-id: ${swagger.auth.clientId:swagger-ui}
      scope-separator:
      additional-query-string-params:
        -nonce: ${random.int[1,10000]}
    display-request-duration: true
    groups-order: desc
  show-actuator: true
  paths-to-exclude: "/error/**"

management:
  endpoints:
    web:
      exposure:
        include: "health, info, prometheus, metrics"
camel:
  springboot:
    use-mdc-logging: true
